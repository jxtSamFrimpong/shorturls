# https://hub.docker.com/_/postgres
# Use postgres/example user/password credentials
version: "3.9"

services:
  db:
    image: postgres
    hostname: postgres-dev
    container_name: postgres
    restart: unless-stopped
    # set shared memory limit when using docker-compose
    shm_size: 128mb
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myuser -d mydatabase"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - dev-net
  # pg-13:
  #   image: postgres:13.15
  #   hostname: postgres-sonar
  #   container_name: postgres-sonar
  #   restart: unless-stopped
  #   # set shared memory limit when using docker-compose
  #   shm_size: 128mb
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U myuser -d mydatabase"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5
  #     start_period: 10s
  #   environment:
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #   volumes:
  #     - postgres-sonar:/var/lib/postgresql/data
  #   ports:
  #     - "5414:5432"
  #   networks:
  #     - dev-net

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    hostname: pgadmin
    #restart: always
    ports:
      - 8450:80
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
      - PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION=${PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION}
      - PGADMIN_CONFIG_LOGIN_BANNER=${PGADMIN_CONFIG_LOGIN_BANNER}
      - PGADMIN_CONFIG_CONSOLE_LOG_LEVEL=${PGADMIN_CONFIG_CONSOLE_LOG_LEVEL}
    networks:
      - dev-net
    volumes:
      - pg_admin:/var/lib/pgadmin

volumes:
  pg_data:
  postgres-sonar:
  pg_admin:
networks:
  dev-net:
    driver: bridge
